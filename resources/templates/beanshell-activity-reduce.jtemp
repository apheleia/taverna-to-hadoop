<%@ requires imports = "java.io.IOException,org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.NullWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Reducer,bsh.EvalError,bsh.Interpreter" %>
	public static class <%= configName %>BeanshellReduce extends Reducer<LongWritable, Text, Text, NullWritable> {
		private Interpreter interpreter = new Interpreter();
		private String script = <%= script %>;
		private Text newValue = new Text();
		
		/* (non-Javadoc)
		 * @see org.apache.hadoop.mapreduce.Reducer#reduce(java.lang.Object, java.lang.Iterable, org.apache.hadoop.mapreduce.Reducer.Context)
		 */
		@Override
		protected void reduce(LongWritable key, Iterable<Text> values,
				Context context) throws IOException, InterruptedException {
			// Clear interpreter first
			try {
				interpreter.eval("clear();");
			} catch (EvalError e) {
				System.err.println("Could not clear() beanshell interpreter: " + e.getMessage());
				e.printStackTrace();
			}
			
			for(Text value : values) {
				try {
					interpreter.set(<%= inputPort %>, value.toString());
					interpreter.eval(script);
					
					newValue.set(interpreter.get(<%= outputPort %>).toString());
					
					context.write(newValue, NullWritable.get());
				} catch (EvalError e) {
					System.err.println("Could not evaluate beanshell: " + e.getMessage());
					e.printStackTrace();
				}
			}
		}
	
	}